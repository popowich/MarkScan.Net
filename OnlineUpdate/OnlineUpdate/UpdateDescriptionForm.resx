<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAbiSURBVFhHrZd5bFVFGMU/aIoQo9CyRZAgNNGISBoV
        Q/jHIESCVoiYoEFFkERB0GClgCguMQTZWiFKylKWsrtUUbbSlq0WEEGKpVhKoWxtaR/tozul7Tuec+99
        skmowCQnb+7M9/3O3Jm5c++zppbFb9n9qTEWvXOSHd49ybArhproiXW1qU8xivXS7rg0Wz/OIgjO+m2a
        IX/DYPizvgRqkwHsBQKeVGeb+hSjWOUoVwwX9f9LyPZJtjCDMN/v0UD9RqD8faCoB3DagJPXSW3qUwxj
        laNcMcRykU0vobsmW+HRhEgCk4CSoUA+Dc60BXyvARdnA5WJ1ApPrKtNfYpRrHKYK4ZYYrroW5dQTl9B
        YdoIAhYT1hqNuYZAyVgELs5HwB9LzUagbOa1Upv6FMNY5ShXDLHEFNu1uHnRnRcVpA7n3XyFACGNea0Q
        uDCNJp8jUPox61PR6Jvyn1KfE6NY5ji5GghZYootD9fqxhKydaItyV7MdfTFofEYzXM0lSM5vTHUB9QE
        oJRrXDIejefHobHIE+tqc/oU48Qyh7liiCWm2PKQl2t5pTSb/ao9qk1Tf+5bNOS0RUM2k85G4ljyi0iI
        7oa4kR0R92ZHbPvmScLeRKBgBBrOvuFIdbWpL3ZEByd26YfdkbttsMMQS0yx5SEvebrWbmmxY7IdPZ82
        HA15A1D/F82PGJJjI5AwvjVObO4J+AdyPQchbX5XbJkTgcCZKNSfGuxI9c1zuiMlrjNwYYATezrlCSyf
        EI7kuAiHJabY8pCXPF1rlpd7W6eMT7nRzs7A5UwGHzakz+fhsvcEivmUS7/nluOVQcOQV8fZLZiBxuN9
        cDn3GUeq+89NR3Y5n8jLwL5j5Xgt6hWUMW/3vnyHJabY8pCXPD17C/nxPfskb/XTaMh9CZf/5JoxGMfC
        mZ5HAcsWr8OAnk+iX49IVPG6uJaPevbDqMuOdNSQ/QgKq+EYxi9Y5cT2p9xygqwwNNJc7Hp6yOsHespb
        A2jF4/No8fZhqNrfDVmJhtRZhoR3DPEjDYtGGZa+bVg5zrCcbSkLhiCXj1VdZhfUZkY4qjvcBVkbnse2
        b6OQMNqNTXzXsIR1MZYob6Yh9zvNQjfIK4We8tYAwtI/MtRmR6MincftT4bTGwxnfzUUbGlNtUHhVikM
        dQfbo+FQW9QdCEft/vao2d/Rkep1B7hx2XfpYDsntig5zMkTQywx85PM8ag9Eg15ylsDaL97iqHuaDRq
        MsxR7Z6gmuHSvlZUS0e1e1uiZs89qM5oQen3imrYpj7FBOOVK0aQF+TLS57y1gA66OJS1jhU7TRU7zIU
        csTVuw2VvL4bEsthki0PeXkD6OAOQEtwaDQq0xiww5DDfaDfCl7fDV3NlIe85HnNAGoOvI7KVAZt5yM4
        xxsAr8tT7kxiiOUwyZaHvK4ZQPpUBv42BBVMqOYI177n/lZsM1zcemcS4xqmBkUveQYH0D55ouUWJD3F
        znaoSjYk8Sun6EcGEuDfdGcSQywxxZaHvOQpbw0gLH6Uzc1Z1BnlaT1QzqScBHfEVbqLjYayX25PyhVj
        7XjDqVVcErLlIS95ylsDaPXYg/ZExmdcn+194Wdi5WYeOjxE/ojliHUnbCv9+f9JOcoVQ6xKjyMPeclT
        3hqAjsPOW2PsxOmV3eHf2Al+AgrWGuYN48i5e8uZWMYD6gKnsilSrHKUK4ZYYootD3nJ0/N2SpsXIi1K
        L4myTY+jNCkUF3lqZc4zzBrMu+AOriCgjPDS72nCI9V3ndSmPsUoVjnKFUMsMcWWh7zk6Vq7Ra/GrqvH
        2M+Zc++F/9cIB+gn7PDXfH8PMawbyzvROvLu1F5GMxk6ppTa1KcYxSpHuWp3WGSKLQ95eZ7/Fn0c3Ef1
        SptiF/IWhXMdO8HHqStbz/fCcq4jX0rTBxpW8Df9C27Ubwx/e1JdbepTjGKVo1wxxBJTbHl4Xjd8rms9
        9Fz2SZ1svuPxrbmeHVGyJgS+1YStM+TF83Hijp4/lEbPuWaOWFeb+hSjWOUoVwyxxBTb87jhkyxY9MH4
        ANU3dYqVZs4KRfH6cBSvaYlibqiSlZxODWYNp1Qb6yqpTX2KUayTw1wxxBLTY9/6y5hSYJ/EMbZxDzfN
        yfiWnMp7UbKqBc6vaI7znF5HyzwFr9mnGMUqR7liiOUxb2keLArUVPV6tocN52OTv4fPbnZsc+THh9Ao
        FL5VobxbV6qrTX2KUaxylCuGx2qyebBonbRZHqJ6dwm3qLnDbeGWGDup/37/JfUpRrHK8XLFuOma36po
        p+px0TOrg0Of05rOflT/66Q29SlGscpR7m3/Ob2+6C50dOr81ktE03q11KY+xTTxjs3+Acy3vb85wV4z
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>